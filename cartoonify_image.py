# -*- coding: utf-8 -*-
"""Cartoonify_Image.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1sGmNoC1jSTcjpf5OSQ9_h18lZ_N8diJ9
"""

# Commented out IPython magic to ensure Python compatibility.
import cv2
import numpy as np
import matplotlib.pyplot as plt
import os

# %matplotlib inline

def read_file(filename):
    if not os.path.exists(filename):
        print(f"Error: File '{filename}' not found.")
        return None
    img = cv2.imread(filename)
    img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
    return img

def resize_image(image, width=600):
    h, w = image.shape[:2]
    aspect_ratio = width / float(w)
    dim = (width, int(h * aspect_ratio))
    return cv2.resize(image, dim, interpolation=cv2.INTER_AREA)

def convert_to_grayscale(image):
    return cv2.cvtColor(image, cv2.COLOR_RGB2GRAY)

def apply_median_blur(gray):
    return cv2.medianBlur(gray, 5)

def detect_edges(blurred):
    return cv2.adaptiveThreshold(
        blurred, 255,
        cv2.ADAPTIVE_THRESH_MEAN_C,
        cv2.THRESH_BINARY, blockSize=9, C=9
    )

def apply_bilateral_filter(image):
    return cv2.bilateralFilter(image, d=9, sigmaColor=300, sigmaSpace=300)

def cartoonify(image):
    gray = convert_to_grayscale(image)
    blurred = apply_median_blur(gray)
    edges = detect_edges(blurred)
    color = apply_bilateral_filter(image)
    cartoon = cv2.bitwise_and(color, color, mask=edges)
    return cartoon

def show_images(original, cartoon):
    plt.figure(figsize=(10, 5))
    plt.subplot(1, 2, 1)
    plt.imshow(original)
    plt.title("Original Image")
    plt.axis("off")

    plt.subplot(1, 2, 2)
    plt.imshow(cartoon)
    plt.title("Cartoon Image")
    plt.axis("off")

    plt.tight_layout()
    plt.show()

filename = "WIN_20250614_19_48_09_Pro.jpg"
img = read_file(filename)
if img is not None:
    img = resize_image(img)
    cartoon_img = cartoonify(img)
    show_images(img, cartoon_img)

